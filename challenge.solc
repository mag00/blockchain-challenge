contract CryptoHill {
    
  address owner;
  address leader;
  bytes32 leaderHash;
  uint8 difficulty;
  uint8 attempts;
  bytes32 lastAttempt;
  
  event Begin(string log);
  event NewLeader(string log, address newLeader);
  event GameOver(string log);
    
  function CryptoHill(){ 
    owner = msg.sender;
    leaderHash = sha256("09F911029D74E35BD84156C5635688C0");
    leader = msg.sender;
    difficulty = 1;
    Begin("Overthrow the leader by colliding the most significant bytes.");
    Begin("Any bounty in the balance given to new leader.");
  }
  
  function overthrow(string challengeData) returns (bytes32 hh){
        var challengeHash = sha256(challengeData);
        lastAttempt = challengeHash;
        
        if(challengeHash == leaderHash)
            return leaderHash;
        
        for(uint i = 0; i < difficulty; i++) {
            if(challengeHash[i] != leaderHash[i]) {
                return leaderHash;
            }
        }
        leader = msg.sender;
        leaderHash = challengeHash;
        attempts++;
        difficulty++;
        NewLeader("New leader!", leader);
        
        //"pay the man" https://www.youtube.com/watch?v=QqitTNF_I3g
        leader.send(this.balance);
        return challengeHash;
  }
  
  function currentLeader() constant returns (address CurrentLeaderAddress){
      return leader;
  }
  function Difficulty() constant returns (int currentDifficulty){
      return difficulty;
  }
  function LeaderHash() constant returns (bytes32 leadingHash){
      return leaderHash;
  }

  function kill(){
      if (msg.sender == owner){
        GameOver("The Crypto Hill has ended.");
        selfdestruct(owner);
      }
  }
}
